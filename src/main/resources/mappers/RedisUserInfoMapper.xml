<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springboot.demo.redis.dao.RedisUserInfoRepository">
    <!--自定义查询语句，便于复用-->
    <sql id="selectSqlByRedis">
        SELECT u.user_id,u.user_name,u.login_account,u.user_age,u.user_state,u.user_sex from t_user u
    </sql>
    <!--定义查询结果集-->
    <resultMap id="userInfoByRedis" type="com.springboot.demo.mybatis.pojo.UserInfo">
        <id column="user_id" property="userId" javaType="int" jdbcType="INTEGER"/>
        <result column="user_name" property="userName" javaType="String" jdbcType="VARCHAR"/>
        <result column="pass_word" property="passWord" javaType="String" jdbcType="VARCHAR"/>
        <result column="login_account" property="loginAccount" javaType="String" jdbcType="VARCHAR"/>
        <result column="user_age" property="userAge" jdbcType="INTEGER" javaType="int"/>
        <result column="create_date" property="createDate" javaType="String" jdbcType="DATE" typeHandler="com.springboot.demo.mybatis.typehandler.DateTypeHandler"/>
        <result column="update_date" property="updateDate" javaType="String" jdbcType="DATE" typeHandler="com.springboot.demo.mybatis.typehandler.DateTypeHandler"/>
        <result column="user_state" property="userState" javaType="String" />
        <result column="user_sex" property="sexEnum" jdbcType="INTEGER" typeHandler="com.springboot.demo.mybatis.typehandler.SexTypeHandler"/>
    </resultMap>
    <!--根据用户名查询用户集合信息-->
    <select id="findUserInfoByUserNameAndRedis" parameterType="String" resultMap="userInfoByRedis">
        <include refid="selectSqlByRedis"/> where u.user_name LIKE CONCAT('%',#{userName},'%')
    </select>
    <!--根据登录账号查询用户集合信息-->
    <select id="findUserInfoByLoginAccountAndRedis" parameterType="String" resultMap="userInfoByRedis">
        <include refid="selectSqlByRedis"/> where u.login_account LIKE CONCAT('%',#{loginAccount},'%')
    </select>
    <!--根据用户标识查询用户详情-->
    <select id="findUserInfoByUserIdAndRedis" parameterType="int" resultMap="userInfoByRedis">
        <include refid="selectSqlByRedis"/> where u.user_id=#{userId}
    </select>
    <!--保存用户信息-->
    <insert id="saveUserInfoByRedis" parameterType="com.springboot.demo.mybatis.pojo.UserInfo" useGeneratedKeys="true" keyProperty="user_id">
        insert into t_user(user_name,pass_word,login_account,user_age,create_date,update_date,user_state,user_sex)
        VALUES (#{userName},#{passWord},#{loginAccount},#{userAge},#{createDate},#{updateDate},#{userState},#{sexEnum});
    </insert>
    <!--更新用户状态-->
    <update id="updateUserStateByRedis" parameterType="com.springboot.demo.mybatis.pojo.UserInfo">
        update t_user u set u.user_state=#{userState},u.update_date=#{updateDate} where u.user_id=#{userId}
    </update>
    <!--物理删除用户-->
    <delete id="deleteUserInfoByUserIdByRedis" parameterType="int">
        delete from t_user where user_id=#{userId}
    </delete>

</mapper>